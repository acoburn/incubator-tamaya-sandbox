#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy current the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

###################################################################################
# Example of a configuration metamodel expressed via properties.
####################################################################################

# Metamodel information
_model.provider=ConfigModel Extension

# reusable parameter definition, referenceable as MyNumber
_MyNumber.model.class=Parameter
_MyNumber.model.type=Integer
_MyNumber.model.description=a (reusable) number type parameter (optional)

####################################################################################
# Description of Configuration Sections (minimal, can be extended by other modules).
# By default its interpreted as a section !
####################################################################################

# a (section)
_a.model.class=Section
_a.params2.model.class=Parameter
_a.params2.model.type=String
_a.params2.model.required=true
_a.params2.model.description=a required parameter

_a.paramInt.model.class=Parameter
_a.paramInt.model.type=ref:MyNumber
_a.paramInt.model.description=an optional parameter (default)

_a._number.model.class=Parameter
_a._number.model.type=Integer
_a._number.model.deprecated=true
_a._number.model.mappedTo=a.paramInt

# a.b.c (section)
_a.b.c.class=Section
_a.b.c.description=Just a test section

# a.b.c.aRequiredSection (section)
_a.b.c.aRequiredSection.model.class=Section
_a.b.c.aRequiredSection.model.required=true
_a.b.c.aRequiredSection.model.description=A section containing required parameters is called a required section.\
         Sections can also explicitly be defined to be required, but without\
         specifying the paramteres to be contained.,

# a.b.c.aRequiredSection.subsection (section)
_a.b.c.aRequiredSection.model.subsection.class=Section

_a.b.c.aRequiredSection.subsection.param0.model.class=Parameter
_a.b.c.aRequiredSection.subsection.param0.model.type=String
_a.b.c.aRequiredSection.subsection.param0.model.description=a minmally documented String parameter
# A minmal String parameter
_a.b.c.aRequiredSection.subsection.param00.model.class=Parameter
_a.b.c.aRequiredSection.subsection.param00.model.type=String

# a.b.c.aRequiredSection.subsection (section)
_a.b.c.aRequiredSection.subsection.param1.model.class=Parameter
_a.b.c.aRequiredSection.subsection.param1.model.type = String
_a.b.c.aRequiredSection.subsection.param1.model.required = true
_a.b.c.aRequiredSection.subsection.intParam.model.class=Parameter
_a.b.c.aRequiredSection.subsection.intParam.model.type = Integer
_a.b.c.aRequiredSection.subsection.intParam.model.description=an optional parameter (default)

# a.b.c.aRequiredSection.nonempty-subsection (section)
_a.b.c.aRequiredSection.nonempty-subsection.model.class=Section
_a.b.c.aRequiredSection.nonempty-subsection.model.required=true

# a.b.c.aRequiredSection.optional-subsection (section)
_a.b.c.aRequiredSection.optional-subsection.model.class=Section

# a.b.c.aValidatedSection (section)
_a.b.c.aValidatedSection.model.class=Section
_a.b.c.aValidatedSection.model.description=A validated section.
_a.b.c.aValidatedSection.model.configModels=org.apache.tamaya.model.TestValidator




