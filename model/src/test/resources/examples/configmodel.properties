#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy current the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

###################################################################################
# Example of a configuration metamodel expressed via properties.
####################################################################################

# Metamodel information
[model].class=Meta-model
[model].name=testmodel
[model].provider=ConfigModel Extension
[model].version=1.0
[model].release-date=2001-01-23
[model].author=Anatole Tresch
# [model].format=alternate format reader type
[model].comments=Late afternoon is best. Backup contact is Nancy.

# reusable parameter definition, referenceable as MyNumber
[MyNumber].class=Parameter
[MyNumber].type=Integer
[MyNumber].description=a (reusable) number type parameter (optional)

####################################################################################
# Description of Configuration Sections (minimal, can be extended by other modules).
# By default its interpreted as a section !
####################################################################################

# a (section)
a.class=Section
a.params2.type=String
a.params2.required=true
a.params2.description=a required parameter
a.paramInt.ref=MyNumber
a.paramInt.description=an optional parameter (default)
a._number.type=Integer
a._number.deprecated=true
a._number.mappedTo=a.paramInt

# a.b.c (section)
a.b.c.class=Section
a.b.c.description=Just a test section

# a.b.c.aRequiredSection (section)
a.b.c.aRequiredSection.class=Section
a.b.c.aRequiredSection.required=true
a.b.c.aRequiredSection.description=A section containing required parameters is called a required section.\
         Sections can also explicitly be defined to be required, but without\
         specifying the paramteres to be contained.,

# a.b.c.aRequiredSection.subsection (section)
a.b.c.aRequiredSection.subsection.class=Section
a.b.c.aRequiredSection.subsection.param0.type=String
a.b.c.aRequiredSection.subsection.param0.description=a minmally documented String parameter
# A minmal String parameter
a.b.c.aRequiredSection.subsection.param00.type = String

# a.b.c.aRequiredSection.subsection (section)
a.b.c.aRequiredSection.subsection.param1.type = String
a.b.c.aRequiredSection.subsection.param1.required = true
a.b.c.aRequiredSection.subsection.intParam.type = Integer
a.b.c.aRequiredSection.subsection.intParam.description=an optional parameter (default)

# a.b.c.aRequiredSection.nonempty-subsection (section)
a.b.c.aRequiredSection.nonempty-subsection.class=Section
a.b.c.aRequiredSection.nonempty-subsection.required=true

# a.b.c.aRequiredSection.optional-subsection (section)
a.b.c.aRequiredSection.optional-subsection.class=Section

# a.b.c.aValidatedSection (section)
a.b.c.aValidatedSection.class=Section
a.b.c.aValidatedSection.description=A validated section.
a.b.c.aValidatedSection.validations=org.apache.tamaya.model.TestValidator?max=3




